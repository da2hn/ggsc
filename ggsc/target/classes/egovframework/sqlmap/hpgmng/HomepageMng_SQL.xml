<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="HomepageMng">
 
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="noticeVO" type="ggsc.hpgmng.service.NoticeVO"/>
	<typeAlias alias="freeBrdVO" type="ggsc.hpgmng.service.FreeBrdVO"/>
	<typeAlias alias="libraryVO" type="ggsc.hpgmng.service.LibraryVO"/>
	<typeAlias alias="newsVO" type="ggsc.hpgmng.service.NewsVO"/>
	<typeAlias alias="onlineAskVO" type="ggsc.hpgmng.service.OnlineAskVO"/>
	<typeAlias alias="eduAppVO" type="ggsc.hpgmng.service.EduAppVO"/>
	<typeAlias alias="popupVO" type="ggsc.hpgmng.service.PopupVO"/>
	<typeAlias alias="youtubeVO" type="ggsc.hpgmng.service.YoutubeVO"/>
<!--	<typeAlias alias="faqVO" type="ggsc.support.service.FaqVO"/>-->

	<!-- 센터소식 목록 -->
	<select id="hpgmngDao.getCenterNewsList" parameterClass="newsVO" resultClass="egovMap">
 		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY gcn.NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY gcn.NUM DESC) AS RNUM2 ,
				gcn.NUM ,
				gcn.VIEW_COUNT,
				gcn.TITLE ,
				gcn.CNTN ,
				gcn.WRITER ,
				gcn.REG_ID ,
				DATE_FORMAT(gcn.DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM,
				gcnf.FILE_NM,
				gcnf.SYS_FILE_NM,
				gcnf.FILE_PATH ,
				gcn.IMG_PATH 
			FROM
				GS_CENTER_NEWS AS gcn
			LEFT JOIN
				GS_CENTER_NEWS_FILE gcnf
			ON gcn.NUM = gcnf.FILE_NUM  AND gcnf.DEL_GB ='N'
			 
			WHERE 1=1
			
			<isNotEmpty property="schStartDate" prepend="AND"> 
				<![CDATA[ gcn.DB_INS_TM >= #schStartDate# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="schEndDate" prepend="AND"> 
				<![CDATA[ gcn.DB_INS_TM <= #schEndDate# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="schText" > 
				<isEqual prepend="AND" property="schType" compareValue="1">
					gcn.TITLE LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schType" compareValue="2">
					gcn.WRITER LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schType" compareValue="3">
					gcn.CNTN LIKE CONCAT('%', #schText#, '%')
				</isEqual>
			</isNotEmpty>
			
			GROUP BY
				gcn.NUM
			
			) A
			
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY RNUM DESC
 		]]>
	</select>
	
	<!-- 센터소식 갯수-->
	<select id="hpgmngDao.getCenterNewsListTotCnt" parameterClass="newsVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_CENTER_NEWS AS gcn
		WHERE 
			1=1
		<isNotEmpty property="schStartDate" prepend="AND"> 
			<![CDATA[ gcn.DB_INS_TM >= #schStartDate# ]]>
		</isNotEmpty>
		
		<isNotEmpty property="schEndDate" prepend="AND"> 
			<![CDATA[ gcn.DB_INS_TM <= #schEndDate# ]]>
		</isNotEmpty>
		
		<isNotEmpty property="schText" > 
			<isEqual prepend="AND" property="schType" compareValue="1">
				gcn.TITLE LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schType" compareValue="2">
				gcn.WRITER LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schType" compareValue="3">
				gcn.CNTN LIKE CONCAT('%', #schText#, '%')
			</isEqual>
		</isNotEmpty>
	</select>
	
	<!-- 센터소식 등록-->
	<insert id="hpgmngDao.insertCenterNews" parameterClass="Map">
		INSERT INTO GS_CENTER_NEWS(
			WRITER,
			TITLE,
			CNTN,
			REG_ID,
			DB_INS_TM 
		) VALUES(
			#writer#,
			#title#,
			#cntn#,
			#regId#,
			NOW() 
		)	
		
		<selectKey resultClass="int" keyProperty="num">
	    	SELECT  LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 센터소식 파일업로드 등록  -->
	<insert id="hpgmngDao.insertCenterNewsUpload" parameterClass="egovMap">
		INSERT INTO GS_CENTER_NEWS_FILE
			(
				FILE_NUM ,
				REG_ID ,
				REG_NM ,
				FILE_NM ,
				SYS_FILE_NM ,
				FILE_PATH ,
				FILE_SIZE,
				DB_INS_TM 
			) VALUES (
				#fileNum# ,
				#regId# ,
				#writer# ,
				#fileNm# ,
				#sysFileNm# ,
				#filePath# ,
				#fileSize# ,
				now() 
			)
	</insert>
	
	<!-- 센터소식 수정  -->
	<update id="hpgmngDao.updateCenterNews" parameterClass="Map">
		UPDATE GS_CENTER_NEWS
			SET
				TITLE = #title# ,
				CNTN = #cntn# ,
				DB_UPD_TM = now()
			WHERE
				NUM = #num#
	</update>
	
	<!-- 센터소식 파일업로드 수정 -->
	<update id="hpgmngDao.updateCenterNewsUpload" parameterClass="newsVO">
		UPDATE GS_CENTER_NEWS_FILE
			SET
				FILE_NM = #fileNm# ,
				SYS_FILE_NM = #sysFileNm# ,
				FILE_PATH = #filePath# ,
				DB_UPD_TM = now()
			WHERE
				FILE_NUM = #num#
	</update>
	
	<!-- 센터소식 삭제  -->
	<update id="hpgmngDao.deleteCenterNews" parameterClass="Integer">
		DELETE FROM
			GS_CENTER_NEWS
		WHERE 
			NUM = #newsNum#
	</update>
	
	<!-- 센터소식 파일업로드 삭제  -->
	<update id="hpgmngDao.deleteCenterNewsUpload" parameterClass="Integer">
		DELETE FROM
			GS_CENTER_NEWS_FILE
		WHERE 
			FILE_NUM = #newsNum#
	</update>
	
	<!-- 센터소식 파일 삭제구분 처리  -->
	<update id="hpgmngDao.deleteCenterNewsUploadGbY" parameterClass="Map">
		UPDATE  
			GS_CENTER_NEWS_FILE
		SET
	 		DEL_GB = 'Y'
		WHERE 
			FILE_NUM = #fileNum#
	</update>
	
	<!-- 센터소식 파일 삭제구분 취소  -->
	<update id="hpgmngDao.deleteCenterNewsUploadGbN" parameterClass="egovMap">
		UPDATE  
			GS_CENTER_NEWS_FILE
		SET
	 		DEL_GB = 'N'
		WHERE 
			NUM = #num#
	</update>
	
	<!-- 센터소식 상세-->	
	<select id="hpgmngDao.getCenterNewsDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			TITLE ,
			WRITER ,
			REG_ID ,
			CAST(CNTN AS CHAR CHARACTER SET UTF8) AS CNTN 
		FROM
			GS_CENTER_NEWS
		WHERE
			NUM = #num#
	</select>
	
	<!-- 센터소식 상세 파일목록-->	
	<select id="hpgmngDao.getCenterNewsFileDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			FILE_NUM ,
			FILE_NM ,
			FILE_PATH ,
			SYS_FILE_NM
		FROM
			GS_CENTER_NEWS_FILE
		WHERE
			FILE_NUM = #num#
			AND DEL_GB = 'N'
	</select>

	<!-- 공지사항 목록 -->
	<select id="hpgmngDao.getNoticeList" parameterClass="noticeVO" resultClass="egovMap">

 		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY gna.NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY gna.NUM DESC) AS RNUM2 ,
				gna.NUM ,
				gna.TITLE ,
				gna.CNTN ,
				gna.WRITER ,
				DATE_FORMAT(gna.DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM ,
				gnaf.FILE_NM ,
				gnaf.SYS_FILE_NM ,
				gnaf.FILE_PATH
			FROM
				GS_NOTICE_A AS gna
			LEFT JOIN GS_NOTICE_A_FILE AS gnaf
				ON gna.NUM = gnaf.FILE_NUM and gnaf.DEL_GB = 'N'
			WHERE 
				1=1
			<isNotEmpty property="schStartDate" prepend="AND">
		       	<![CDATA[ gna.DB_INS_TM >= #schStartDate# ]]>
		    </isNotEmpty>
		    
		    <isNotEmpty property="schEndDate" prepend="AND">
		        <![CDATA[ gna.DB_INS_TM <= #schEndDate#   ]]>
		    </isNotEmpty>
		    
		     <isNotEmpty property="schText" > 
		    	<isEqual prepend="AND" property="schType" compareValue="1">
					gna.TITLE LIKE CONCAT('%', #schText#, '%')
					OR
					gna.CNTN LIKE CONCAT('%', #schText#, '%')
					OR
					gna.WRITER LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schType" compareValue="2">
					gna.TITLE LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schType" compareValue="3">
					gna.CNTN LIKE CONCAT('%', #schText#, '%')
				</isEqual>
			</isNotEmpty>
			
			GROUP BY
				gna.NUM
				
			) A
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY NUM DESC
 		]]>
	</select>
	
	<!-- 공지사항 갯수-->
	<select id="hpgmngDao.getNoticeListTotCnt" parameterClass="noticeVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_NOTICE_A AS gna
		WHERE 
		1=1
		<isNotEmpty property="schStartDate" prepend="AND">
	       	<![CDATA[ gna.DB_INS_TM >= #schStartDate# ]]>
	    </isNotEmpty>
	    
	    <isNotEmpty property="schEndDate" prepend="AND">
	        <![CDATA[ gna.DB_INS_TM <= #schEndDate#   ]]>
	    </isNotEmpty>
	    
	     <isNotEmpty property="schText" > 
	    	<isEqual prepend="AND" property="schType" compareValue="1">
				gna.TITLE LIKE CONCAT('%', #schText#, '%')
				OR
				gna.CNTN LIKE CONCAT('%', #schText#, '%')
				OR
				gna.WRITER LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schType" compareValue="2">
				gna.TITLE LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schType" compareValue="3">
				gna.CNTN LIKE CONCAT('%', #schText#, '%')
			</isEqual>
		</isNotEmpty>
	</select>
	
	<!-- 공지사항 등록-->
	<insert id="hpgmngDao.insertNotice" parameterClass="Map">
		INSERT INTO GS_NOTICE_A(
			<!-- NUM , -->
			WRITER,
			TITLE,
			CNTN,
			REG_ID,
			DB_INS_TM
		) VALUES(
			<!-- (SELECT IFNULL(MAX(A.NUM), 0)+1 FROM GS_FREE_BOARD AS A) , -->
			#writer#,
			#title#,
			#cntn#,
			#regId#,
			NOW()
		)	
		
		<selectKey resultClass="int" keyProperty="num">
			SELECT LAST_INSERT_ID();
		</selectKey>
		
	</insert>
	
	<!-- 공지사항 파일업로드 등록  -->
	<insert id="hpgmngDao.insertNoticeUpload" parameterClass="egovMap">
		INSERT INTO GS_NOTICE_A_FILE
			(
				FILE_NUM ,
				REG_ID ,
				REG_NM ,
				FILE_NM ,
				SYS_FILE_NM ,
				FILE_PATH ,
				FILE_SIZE,
				DB_INS_TM
			) VALUES (
				#fileNum# ,
				#regId# ,
				#writer# ,
				#fileNm# ,
				#sysFileNm# ,
				#filePath# ,
				#fileSize# ,
				now()
			)
	</insert>
	
	<!-- 공지사항 수정  -->
	<update id="hpgmngDao.updateNotice" parameterClass="Map">
		UPDATE GS_NOTICE_A
			SET
				TITLE = #title# ,
				CNTN = #cntn# ,
				DB_UPD_TM = now()
			WHERE
				NUM = #num#
	</update>
	
	<!-- 공지사항 삭제  -->
	<update id="hpgmngDao.deleteNotice" parameterClass="Integer">
		DELETE FROM
			GS_NOTICE_A
		WHERE 
			NUM = #noticeNum#
	</update>
	
	<!-- 공지사항 파일업로드 삭제  -->
	<update id="hpgmngDao.deleteNoticeUpload" parameterClass="Integer">
		DELETE FROM
			GS_NOTICE_A_FILE
		WHERE 
			FILE_NUM = #noticeNum#
	</update>
	
	<!-- 공지사항 파일 삭제구분 처리  -->
	<update id="hpgmngDao.deleteNoticeUploadGbY" parameterClass="Map">
		UPDATE  
			GS_NOTICE_A_FILE
		SET
	 		DEL_GB = 'Y'
		WHERE 
			FILE_NUM = #fileNum#
	</update>
	
	<!-- 공지사항 파일 삭제구분 취소  -->
	<update id="hpgmngDao.deleteNoticeUploadGbN" parameterClass="egovMap">
		UPDATE  
			GS_NOTICE_A_FILE
		SET
	 		DEL_GB = 'N'
		WHERE 
			NUM = #num#
	</update>
	
	<!-- 공지사항 파일업로드 수정  -->
	<update id="hpgmngDao.updateNoticeUpload" parameterClass="noticeVO">
		UPDATE GS_NOTICE_A_FILE
			SET
				FILE_NM = #fileNm# ,
				SYS_FILE_NM = #sysFileNm# ,
				FILE_PATH = #filePath# ,
				FILE_SIZE = #fileSize# ,
				DB_UPD_TM = now()
			WHERE
				FILE_NUM = #num#
	</update>
	
	<!-- 공지사항 상세-->	
	<select id="hpgmngDao.getNoticeDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			TITLE ,
			WRITER ,
			REG_ID ,
			CAST(CNTN AS CHAR CHARACTER SET UTF8) AS CNTN 
		FROM
			GS_NOTICE_A 
		WHERE
			NUM = #num#
	</select>
		
	<!-- 공지사항 상세 파일목록-->	
	<select id="hpgmngDao.getNoticeFileDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			FILE_NUM ,
			FILE_NM ,
			FILE_PATH ,
			SYS_FILE_NM
		FROM
			GS_NOTICE_A_FILE 
		WHERE
			FILE_NUM = #num#
			AND DEL_GB = 'N'
	</select>
	
	<!-- 자유게시판 목록 -->
	<select id="hpgmngDao.getFreeBoardList" parameterClass="freeBrdVO" resultClass="egovMap">
 		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY gfb.NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY gfb.NUM DESC) AS RNUM2 ,
				gfb.NUM ,
				gfb.VIEW_COUNT,
				gfb.TITLE ,
				gfb.CNTN ,
				gfb.WRITER ,
				gfb.REG_ID ,
				DATE_FORMAT(gfb.DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM,
				gfbf.FILE_NM,
				gfbf.SYS_FILE_NM,
				gfbf.FILE_PATH
			FROM
				GS_FREE_BOARD AS gfb
			LEFT JOIN
				GS_FREE_BOARD_FILE gfbf
			ON gfb.NUM = gfbf.FILE_NUM  AND gfbf.DEL_GB ='N'
			 
			WHERE 1=1
			
			<isNotEmpty property="schFblStartDate" prepend="AND">
			   <![CDATA[ gfb.DB_INS_TM >= #schFblStartDate# ]]>
			</isNotEmpty>
			
			<isNotEmpty property = "schFblEndDate" prepend="AND">
			   <![CDATA[ gfb.DB_INS_TM <= #schFblEndDate# ]]>
			</isNotEmpty>
			
			<isNotEmpty property = "schFblText">
			    <isEqual prepend="AND" property = "schFblType" compareValue="1">
			       gfb.TITLE LIKE CONCAT('%' , #schFblText# , '%')
			    </isEqual>
			    <isEqual prepend="AND" property = "schFblType" compareValue="2">
			       gfb.WRITER LIKE CONCAT('%' , #schFblText# , '%')
			    </isEqual>
			    <isEqual prepend="AND" property = "schFblType" compareValue="3">
			       gfb.CNTN LIKE CONCAT('%' , #schFblText# , '%')
			    </isEqual>
			</isNotEmpty>
			
			GROUP BY
				gfb.NUM
			
			) A
			
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY RNUM DESC
 		]]>
	</select>
	
	<!-- 자유게시판 갯수-->
	<select id="hpgmngDao.getFreeBoardListTotCnt" parameterClass="freeBrdVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_FREE_BOARD AS gfb
		WHERE 
			1=1
			
		<isNotEmpty property="schFblStartDate" prepend="AND">
		   <![CDATA[ gfb.DB_INS_TM >= #schFblStartDate# ]]>
		</isNotEmpty>
		
		<isNotEmpty property = "schFblEndDate" prepend="AND">
		   <![CDATA[ gfb.DB_INS_TM <= #schFblEndDate# ]]>
		</isNotEmpty>
		
		<isNotEmpty property = "schFblText">
		    <isEqual prepend="AND" property = "schFblType" compareValue="1">
		       gfb.TITLE LIKE CONCAT('%' , #schFblText# , '%')
		    </isEqual>
		    <isEqual prepend="AND" property = "schFblType" compareValue="2">
		       gfb.WRITER LIKE CONCAT('%' , #schFblText# , '%')
		    </isEqual>
		    <isEqual prepend="AND" property = "schFblType" compareValue="3">
		       gfb.CNTN LIKE CONCAT('%' , #schFblText# , '%')
		    </isEqual>
		</isNotEmpty>
	</select>
	
	<!-- 자유게시판 등록-->
	<insert id="hpgmngDao.insertFreeBoard" parameterClass="Map">
		INSERT INTO GS_FREE_BOARD(
			WRITER,
			TITLE,
			CNTN,
			REG_ID,
			DB_INS_TM
		) VALUES(
			#writer#,
			#title#,
			#cntn#,
			#regId#,
			NOW()
		)	
		
		<selectKey resultClass="int" keyProperty="num">
	    	SELECT  LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 자유게시판 파일업로드 등록  -->
	<insert id="hpgmngDao.insertFreeBoardUpload" parameterClass="egovMap">
		INSERT INTO GS_FREE_BOARD_FILE
			(
				FILE_NUM ,
				REG_ID ,
				REG_NM ,
				FILE_NM ,
				SYS_FILE_NM ,
				FILE_PATH ,
				FILE_SIZE,
				DB_INS_TM 
			) VALUES (
				#fileNum# ,
				#regId# ,
				#writer# ,
				#fileNm# ,
				#sysFileNm# ,
				#filePath# ,
				#fileSize# ,
				now() 
			)
	</insert>
	
	<!-- 자유게시판 수정  -->
	<update id="hpgmngDao.updateFreeBoard" parameterClass="Map">
		UPDATE GS_FREE_BOARD
			SET
				TITLE = #title# ,
				CNTN = #cntn# ,
				DB_UPD_TM = now()
			WHERE
				NUM = #num#
	</update>
	
	<!-- 자유게시판 파일업로드 수정 -->
	<update id="hpgmngDao.updateFreeBoardUpload" parameterClass="freeBrdVO">
		UPDATE GS_FREE_BOARD
			SET
				FILE_NM = #fileNm# ,
				SYS_FILE_NM = #sysFileNm# ,
				FILE_PATH = #filePath# ,
				DB_UPD_TM = now()
			WHERE
				FILE_NUM = #num#
	</update>
	
	<!-- 자유게시판 삭제  -->
	<update id="hpgmngDao.deleteFreeBoard" parameterClass="Integer">
		DELETE FROM
			GS_FREE_BOARD
		WHERE 
			NUM = #freeBrdNum#
	</update>
	
	<!-- 자유게시판 파일업로드 삭제  -->
	<update id="hpgmngDao.deleteFreeBoardUpload" parameterClass="Integer">
		DELETE FROM
			GS_FREE_BOARD_FILE
		WHERE 
			FILE_NUM = #freeBrdNum#
	</update>
	
	<!-- 자유게시판 파일 삭제구분 처리  -->
	<update id="hpgmngDao.deleteFreeBoardUploadGbY" parameterClass="Map">
		UPDATE  
			GS_FREE_BOARD_FILE
		SET
	 		DEL_GB = 'Y'
		WHERE 
			FILE_NUM = #fileNum#
	</update>
	
	<!-- 자유게시판 파일 삭제구분 취소  -->
	<update id="hpgmngDao.deleteFreeBoardUploadGbN" parameterClass="egovMap">
		UPDATE  
			GS_FREE_BOARD_FILE
		SET
	 		DEL_GB = 'N'
		WHERE 
			NUM = #num#
	</update>
	
	<!-- 자유게시판 상세-->	
	<select id="hpgmngDao.getFreeBoardDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			TITLE ,
			WRITER ,
			REG_ID ,
			CAST(CNTN AS CHAR CHARACTER SET UTF8) AS CNTN 
		FROM
			GS_FREE_BOARD
		WHERE
			NUM = #num#
	</select>
	
	<!-- 자유게시판 상세 파일목록-->	
	<select id="hpgmngDao.getFreeBoardFileDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			FILE_NUM ,
			FILE_NM ,
			FILE_PATH ,
			SYS_FILE_NM
		FROM
			GS_FREE_BOARD_FILE
		WHERE
			FILE_NUM = #num#
			AND DEL_GB = 'N'
	</select>

	
	<!-- 문서자료실 목록 -->
	<select id="hpgmngDao.getLibraryList" parameterClass="libraryVO" resultClass="egovMap">
 		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY gl.NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY gl.NUM DESC) AS RNUM2 ,
				gl.NUM ,
				gl.VIEW_COUNT,
				gl.TITLE ,
				gl.CNTN ,
				gl.WRITER ,
				gl.REG_ID ,
				DATE_FORMAT(gl.DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM,
				glf.FILE_NM,
				glf.SYS_FILE_NM,
				glf.FILE_PATH 
			FROM
				GS_LIBRARY AS gl
			LEFT JOIN
				GS_LIBRARY_FILE glf
			ON gl.NUM = glf.FILE_NUM  AND glf.DEL_GB ='N'
			 
			WHERE 1=1
			
			<isNotEmpty property="schDcuStartDate" prepend="AND">
		       	<![CDATA[ gl.DB_INS_TM >= #schDcuStartDate# ]]>
		    </isNotEmpty>
		    
		    <isNotEmpty property="schDcuEndDate" prepend="AND">
		        <![CDATA[ gl.DB_INS_TM <= #schDcuEndDate#   ]]>
		    </isNotEmpty>
		
			<isNotEmpty property="schDcuText" > 
				<isEqual prepend="AND" property="schDcuType" compareValue="1">
					gl.TITLE LIKE CONCAT('%', #schDcuText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schDcuType" compareValue="2">
					gl.WRITER LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schDcuType" compareValue="3">
					gl.CNTN LIKE CONCAT('%', #schDcuText#, '%')
				</isEqual>
			</isNotEmpty>
			
			GROUP BY
				gl.NUM
			
			) A
			
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY RNUM DESC
 		]]>
	</select>
	
	<!-- 문서자료실 갯수-->
	<select id="hpgmngDao.getLibraryListTotCnt" parameterClass="libraryVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_LIBRARY AS gl
		WHERE 
			1=1
		<isNotEmpty property="schDcuStartDate" prepend="AND">
	       	<![CDATA[ gl.DB_INS_TM >= #schDcuStartDate# ]]>
	    </isNotEmpty>
	    
	    <isNotEmpty property="schDcuEndDate" prepend="AND">
	        <![CDATA[ gl.DB_INS_TM <= #schDcuEndDate#   ]]>
	    </isNotEmpty>
	
		<isNotEmpty property="schDcuText" > 
			<isEqual prepend="AND" property="schDcuType" compareValue="1">
				gl.TITLE LIKE CONCAT('%', #schDcuText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schDcuType" compareValue="2">
				gl.WRITER LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schDcuType" compareValue="3">
				gl.CNTN LIKE CONCAT('%', #schDcuText#, '%')
			</isEqual>
		</isNotEmpty>
	</select>
	
	<!-- 문서자료실 등록-->
	<insert id="hpgmngDao.insertLibrary" parameterClass="Map">
		INSERT INTO GS_LIBRARY(
			WRITER,
			TITLE,
			CNTN,
			REG_ID,
			DB_INS_TM 
		) VALUES(
			#writer#,
			#title#,
			#cntn#,
			#regId#,
			NOW() 
		)	
		
		<selectKey resultClass="int" keyProperty="num">
	    	SELECT  LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 문서자료실 파일업로드 등록  -->
	<insert id="hpgmngDao.insertLibraryUpload" parameterClass="egovMap">
		INSERT INTO GS_LIBRARY_FILE
			(
				FILE_NUM ,
				REG_ID ,
				REG_NM ,
				FILE_NM ,
				SYS_FILE_NM ,
				FILE_PATH ,
				FILE_SIZE,
				DB_INS_TM 
			) VALUES (
				#fileNum# ,
				#regId# ,
				#writer# ,
				#fileNm# ,
				#sysFileNm# ,
				#filePath# ,
				#fileSize# ,
				now() 
			)
	</insert>
	
	<!-- 문서자료실 수정  -->
	<update id="hpgmngDao.updateLibrary" parameterClass="Map">
		UPDATE GS_LIBRARY
			SET
				TITLE = #title# ,
				CNTN = #cntn# ,
				DB_UPD_TM = now()
			WHERE
				NUM = #num#
	</update>
	
	<!-- 문서자료실 파일업로드 수정 -->
	<update id="hpgmngDao.updateLibraryUpload" parameterClass="libraryVO">
		UPDATE GS_LIBRARY_FILE
			SET
				FILE_NM = #fileNm# ,
				SYS_FILE_NM = #sysFileNm# ,
				FILE_PATH = #filePath# ,
				DB_UPD_TM = now()
			WHERE
				FILE_NUM = #num#
	</update>
	
	<!-- 문서자료실 삭제  -->
	<update id="hpgmngDao.deleteLibrary" parameterClass="Integer">
		DELETE FROM
			GS_LIBRARY
		WHERE 
			NUM = #libraryNum#
	</update>
	
	<!-- 문서자료실 파일업로드 삭제  -->
	<update id="hpgmngDao.deleteLibraryUpload" parameterClass="Integer">
		DELETE FROM
			GS_LIBRARY_FILE
		WHERE 
			FILE_NUM = #libraryNum#
	</update>
	
	<!-- 문서자료실 파일 삭제구분 처리  -->
	<update id="hpgmngDao.deleteLibraryUploadGbY" parameterClass="Map">
		UPDATE  
			GS_LIBRARY_FILE
		SET
	 		DEL_GB = 'Y'
		WHERE 
			FILE_NUM = #fileNum#
	</update>
	
	<!-- 문서자료실 파일 삭제구분 취소  -->
	<update id="hpgmngDao.deleteLibraryUploadGbN" parameterClass="egovMap">
		UPDATE  
			GS_LIBRARY_FILE
		SET
	 		DEL_GB = 'N'
		WHERE 
			NUM = #num#
	</update>
	
	<!-- 문서자료실 상세-->	
	<select id="hpgmngDao.getLibraryDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			TITLE ,
			WRITER ,
			REG_ID ,
			CAST(CNTN AS CHAR CHARACTER SET UTF8) AS CNTN 
		FROM
			GS_LIBRARY
		WHERE
			NUM = #num#
	</select>
	
	<!-- 문서자료실 상세 파일목록-->	
	<select id="hpgmngDao.getLibraryFileDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			FILE_NUM ,
			FILE_NM ,
			FILE_PATH ,
			SYS_FILE_NM
		FROM
			GS_LIBRARY_FILE
		WHERE
			FILE_NUM = #num#
			AND DEL_GB = 'N'
	</select>
	
	<!-- 온라인상담 목록 -->
	<select id="hpgmngDao.getOnlineAskList" parameterClass="onlineAskVO" resultClass="egovMap">
 		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY goa.NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY goa.NUM DESC) AS RNUM2 ,
				goa.NUM ,
				goa.VIEW_COUNT,
				goa.TITLE ,
				goa.CNTN ,
				goa.WRITER ,
				goa.REG_ID ,
				DATE_FORMAT(goa.DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM,
				CASE WHEN goaa.NUM IS NOT NULL THEN 'Y'
					ELSE 'N' END AS ANS_YN
			FROM
				GS_ONLINE_ASK AS goa
			LEFT JOIN
				GS_ONLINE_ASK_ANS goaa
			ON goa.NUM = goaa.NUM 
			
			WHERE 1=1
			
			<isNotEmpty property="schOlaStartDate" prepend="AND"> 
				<![CDATA[ goa.DB_INS_TM >= #schOlaStartDate# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="schOlaEndDate" prepend="AND"> 
				<![CDATA[ goa.DB_INS_TM <= #schOlaEndDate# ]]>
			</isNotEmpty>
			
				<isNotEmpty property="schOlaText" > 
					<isEqual prepend="AND" property="schOlaType" compareValue="1">
						goa.TITLE LIKE CONCAT('%', #schOlaText#, '%')
					</isEqual>
					<isEqual prepend="AND" property="schOlaType" compareValue="2">
						goa.WRITER LIKE CONCAT('%', #schOlaText#, '%')
					</isEqual>
					<isEqual prepend="AND" property="schOlaType" compareValue="3">
						goa.CNTN LIKE CONCAT('%', #schOlaText#, '%')
					</isEqual>
				</isNotEmpty>
			
			) A
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY RNUM DESC
 		]]>
	</select>
	
	<!-- 온라인상담 갯수-->
	<select id="hpgmngDao.getOnlineAskListTotCnt" parameterClass="onlineAskVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_ONLINE_ASK AS goa
		WHERE 
			1=1
			
	    <isNotEmpty property="schOlaStartDate" prepend="AND"> 
				<![CDATA[ goa.DB_INS_TM >= #schOlaStartDate# ]]>
			</isNotEmpty>
			
			<isNotEmpty property="schOlaEndDate" prepend="AND"> 
				<![CDATA[ goa.DB_INS_TM <= #schOlaEndDate# ]]>
			</isNotEmpty>
			
				<isNotEmpty property="schOlaText" > 
					<isEqual prepend="AND" property="schOlaType" compareValue="1">
						goa.TITLE LIKE CONCAT('%', #schOlaText#, '%')
					</isEqual>
					<isEqual prepend="AND" property="schOlaType" compareValue="2">
						goa.WRITER LIKE CONCAT('%', #schOlaText#, '%')
					</isEqual>
					<isEqual prepend="AND" property="schOlaType" compareValue="3">
						goa.CNTN LIKE CONCAT('%', #schOlaText#, '%')
					</isEqual>
				</isNotEmpty>
			
		 <!-- <isNotEmpty property="schTitle" prepend="AND"> 
			TITLE LIKE CONCAT('%', #schTitle#, '%')
		</isNotEmpty>
		<isNotEmpty property="schWriter" prepend="AND"> 
			WRITER LIKE CONCAT('%', #schWriter#, '%')
		</isNotEmpty>
		<isNotEmpty property="schCntn" prepend="AND"> 
			CNTN LIKE CONCAT('%', #schCntn#, '%')
		</isNotEmpty> -->
	</select>
	
	<!-- 온라인상담 등록-->
	<insert id="hpgmngDao.insertOnlineAsk" parameterClass="onlineAskVO">
	<![CDATA[
		INSERT INTO GS_ONLINE_ASK_ANS(
			NUM,
			ANS_TITLE ,
			ANS_CNTN,
			REG_ID,
			REG_NM,
			ANS_DB_INS_TM
		) VALUES(
			#num# ,
			#title# ,
			#ansCntn#,
			#regId#,
			#regNm#,
			NOW()
		)	
		]]>
	</insert>
	
	<!-- 온라인상담 답변여부 수정  -->
	<update id="hpgmngDao.updateOnlineAskAnswer" parameterClass="onlineAskVO">
		UPDATE GS_ONLINE_ASK
			SET
				ANSWER_YN = 'Y'
			WHERE
				NUM = #num#
	</update>
	
	<!-- 온라인상담 수정  -->
	<update id="hpgmngDao.updateOnlineAsk" parameterClass="onlineAskVO">
		UPDATE GS_ONLINE_ASK_ANS
			SET
				ANS_CNTN = #ansCntn# ,
				REG_ID = #regId# ,
				REG_NM = #regNm#
			WHERE
				NUM = #num#
	</update>
	
	<!-- 온라인상담 삭제  -->
	<update id="hpgmngDao.deleteOnlineAsk" parameterClass="Integer">
		DELETE FROM
			GS_ONLINE_ASK
		WHERE 
			NUM = #onlineNum#
	</update>
	
	<!-- 온라인상담 답변 삭제  -->
	<update id="hpgmngDao.deleteOnlineAskAns" parameterClass="Integer">
		DELETE FROM
			GS_ONLINE_ASK_ANS
		WHERE 
			NUM = #onlineNum#
	</update>
	
	<!-- 온라인상담 상세-->	
	<select id="hpgmngDao.getOnlineAskDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			A.NUM ,
			A.TITLE ,
			A.WRITER ,
			A.REG_ID ,
			CAST(A.CNTN AS CHAR CHARACTER SET UTF8) AS CNTN ,
			B.ANS_CNTN
		FROM
			GS_ONLINE_ASK AS A
		LEFT JOIN GS_ONLINE_ASK_ANS AS B
			ON A.NUM = B.NUM
		WHERE
			A.NUM = #num#
	</select>
	
	
	<!-- 교육신청 목록  -->
	<select id="hpgmngDao.getEduAppList" parameterClass="eduAppVO" resultClass="egovMap">
		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM2 ,
				NUM ,
				BIRTH ,
				PHONE ,
				USER_ID ,
				USER_NM ,
				CENTER_NM ,
				DEPART ,
				EMAIL ,
				LOCAL_GB , 
				SIGUN_CD ,
				REG_DATE ,
				EDU_NAME ,
				DATE_FORMAT(DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM
			FROM
				GS_EDU_APP
			WHERE
				1=1
			<isNotEmpty property="schText"> 
				<isEqual property="schType" compareValue="1"> 
					AND USER_NM LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual property="schType" compareValue="2"> 
					AND CENTER_NM LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual property="schType" compareValue="3"> 
					AND DEPART LIKE CONCAT('%', #schText#, '%')
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="schStartDate" prepend="AND">
				DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ >= ]]> #schStartDate#
			</isNotEmpty>
			<isNotEmpty property="schEndDate" prepend="AND">
				DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ <= ]]> #schEndDate#
			</isNotEmpty>
			) A
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY RNUM DESC
 		]]>
	</select>
	
	<!-- 교육신청 갯수  -->
	<select id="hpgmngDao.getEduAppListTotCnt" parameterClass="eduAppVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_EDU_APP
		WHERE 
			1=1
		<isNotEmpty property="schText"> 
			<isEqual property="schType" compareValue="1"> 
				AND USER_NM LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual property="schType" compareValue="2"> 
				AND CENTER_NM LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual property="schType" compareValue="3"> 
				AND DEPART LIKE CONCAT('%', #schText#, '%')
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="schStartDate" prepend="AND">
			DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ >= ]]> #schStartDate#
		</isNotEmpty>
		<isNotEmpty property="schEndDate" prepend="AND">
			DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ <= ]]> #schEndDate#
		</isNotEmpty>
	</select>
	
	<!-- 교육신청 상세 -->
	<select id="hpgmngDao.getEduAppDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			*
		FROM
			GS_EDU_APP
		WHERE
			NUM = #num#
	</select>
	
	<update id="hpgmngDao.updateEduApp" parameterClass="eduAppVO">
		UPDATE GS_EDU_APP
			SET
				PHONE = #phone# ,
				EMAIL = #email# ,
				CENTER_NM = #centerNm# ,
				DEPART = #depart# ,
				EDU_NAME = #eduName# ,
				REG_DATE = #regDate#
			WHERE
				NUM = #num#
	</update>
	
	<!-- 팝업 목록  -->
	<select id="hpgmngDao.getPopupList" parameterClass="popupVO" resultClass="egovMap">
		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY gpa.NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY gpa.NUM DESC) AS RNUM2 ,
				gpa.NUM ,
				gpa.VIEW_COUNT,
				gpa.TITLE ,
				gpa.CNTN ,
				gpa.WRITER ,
				gpa.REG_ID ,
				DATE_FORMAT(gpa.DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM,
				gpaf.FILE_NM,
				gpaf.SYS_FILE_NM,
				gpaf.FILE_PATH
			FROM
				GS_POPUP_A gpa
			LEFT JOIN
				GS_POPUP_A_FILE gpaf
			ON 
				gpa.NUM = gpaf.FILE_NUM 
			WHERE 
				1 = 1
			<isNotEmpty property="schText"> 
				<isEqual property="schType" compareValue="1"> 
					AND USER_NM LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual property="schType" compareValue="2"> 
					AND CENTER_NM LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual property="schType" compareValue="3"> 
					AND DEPART LIKE CONCAT('%', #schText#, '%')
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="schStartDate" prepend="AND">
				DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ >= ]]> #schStartDate#
			</isNotEmpty>
			<isNotEmpty property="schEndDate" prepend="AND">
				DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ <= ]]> #schEndDate#
			</isNotEmpty>
			) A
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY RNUM DESC
 		]]>
	</select>
	
	<!-- 팝업 갯수  -->
	<select id="hpgmngDao.getPopupListTotCnt" parameterClass="popupVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_POPUP_A
		WHERE 
			1=1
		<isNotEmpty property="schText"> 
			<isEqual property="schType" compareValue="1"> 
				AND USER_NM LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual property="schType" compareValue="2"> 
				AND CENTER_NM LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual property="schType" compareValue="3"> 
				AND DEPART LIKE CONCAT('%', #schText#, '%')
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="schStartDate" prepend="AND">
			DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ >= ]]> #schStartDate#
		</isNotEmpty>
		<isNotEmpty property="schEndDate" prepend="AND">
			DATE_FORMAT(DB_INS_TM, '%Y.%m.%d') <![CDATA[ <= ]]> #schEndDate#
		</isNotEmpty>
	</select>
	
	<!-- 팝업 상세 -->
	<select id="hpgmngDao.getPopupDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			A.NUM ,
			A.TITLE ,
			A.WRITER ,
			A.REG_ID ,
			CAST(A.CNTN AS CHAR CHARACTER SET UTF8) AS CNTN ,
			B.FILE_NM ,
			B.FILE_PATH ,
			B.SYS_FILE_NM
		FROM
			GS_POPUP_A AS A
		LEFT JOIN GS_POPUP_A_FILE AS B
			ON A.NUM = B.FILE_NUM
		WHERE
			A.NUM = #num#
	</select>
	
	<!-- 팝업관리 등록  -->
	<insert id="hpgmngDao.insertPopup" parameterClass="popupVO">
		INSERT INTO GS_POPUP_A(
			<!-- NUM , -->
			WRITER,
			TITLE,
			CNTN,
			REG_ID,
			DB_INS_TM
		) VALUES(
			<!-- (SELECT IFNULL(MAX(A.NUM), 0)+1 FROM GS_POPUP_A AS A) , -->
			#writer#,
			#title#,
			#cntn#,
			#regId#,
			NOW()
		)	
	</insert>
	
	<!-- 팝업관리 파일업로드 등록  -->
	<insert id="hpgmngDao.insertPopupUpload" parameterClass="popupVO">
		INSERT INTO GS_POPUP_A_FILE
			(
				FILE_NUM ,
				REG_ID ,
				REG_NM ,
				FILE_NM ,
				SYS_FILE_NM ,
				REAL_FILE_NM ,
				FILE_PATH ,
				DB_INS_TM
			) VALUES (
				(SELECT IFNULL(MAX(A.NUM),0) FROM GS_POPUP_A AS A) ,
				#regId# ,
				#writer# ,
				#fileNm# ,
				#sysFileNm# ,
				#realFileNm# ,
				#filePath# ,
				now()
			)
	</insert>
	
	<update id="hpgmngDao.updatePopup" parameterClass="popupVO">
		UPDATE GS_POPUP_A
			SET
				TITLE = #title# 
			WHERE
				NUM = #num#
	</update>
	
	<update id="hpgmngDao.updatePopupUpload" parameterClass="popupVO">
		UPDATE GS_POPUP_A_FILE
			SET
				FILE_NM = #fileNm# ,
				SYS_FILE_NM = #sysFileNm# ,
				REAL_FILE_NM = #realFileNm# ,
				FILE_PATH = #filePath# ,
				DB_UPD_TM = now()
			WHERE
				FILE_NUM = #num#
	</update>
	
	<update id="hpgmngDao.deletePopup" parameterClass="popupVO">
		DELETE FROM 
			GS_POPUP_A
		WHERE
			NUM = #num#
	</update>
	
	<update id="hpgmngDao.deletePopupUpload" parameterClass="popupVO">
		DELETE FROM 
			GS_POPUP_A_FILE
		WHERE
			FILE_NUM = #num#
	</update>	
	
	
	<!-- FAQ 목록  -->
	<select id="hpgmngDao.getFaqList" parameterClass="faqVO" resultClass="egovMap">
		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM2 ,
				NUM ,
				TITLE ,
				WRITER ,
				RPLY_CNTN ,
				DATE_FORMAT(DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM
			FROM
				GS_EDU_APP
			WHERE
				1=1
			<isNotEmpty property="schText"> 
				<isEqual property="schType" compareValue="1"> 
					AND TITLE LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual property="schType" compareValue="2"> 
					AND RPLY_CNTN LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual property="schType" compareValue="3"> 
					AND WRITER LIKE CONCAT('%', #schText#, '%')
				</isEqual>
			</isNotEmpty>
			) A
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY RNUM DESC
 		]]>
	</select>
	
	<!-- FAQ 갯수  -->
	<select id="hpgmngDao.getFaqListTotCnt" parameterClass="faqVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_FAQ_A
		WHERE 
			1=1
		<isNotEmpty property="schText"> 
			<isEqual property="schType" compareValue="1"> 
				AND TITLE LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual property="schType" compareValue="2"> 
				AND RPLY_CNTN LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual property="schType" compareValue="3"> 
				AND WRITER LIKE CONCAT('%', #schText#, '%')
			</isEqual>
		</isNotEmpty>
	</select>
	
	<!-- FAQ 등록  -->
	<insert id="hpgmngDao.insertFaq" parameterClass="faqVO">
		INSERT INTO GS_FAQ_A
			(
				NUM ,
				TITLE ,
				WRITER ,
				REG_ID ,
				DB_INS_TM
			) VALUES (
				(SELECT IFNULL(MAX(A.NUM),0)+1 FROM GS_FAQ_A AS A) ,
				#title# ,
				#writer# ,
				#regId# ,
				now()
			)
	</insert>
	
	<!-- FAQ 상세  -->
	<select id="hpgmngDao.getFaqDetail" parameterClass="Integer" resultClass="egovMap">
		SELECT
			NUM ,
			TITLE ,
			WRITER ,
			RPLY_CNTN
		FROM
			GS_FAQ_A
		WHERE
			NUM = #num#
	</select>
	
	<!-- FAQ 수정  -->
	<update id="hpgmngDao.updateFaq" parameterClass="faqVO">
		UPDATE GS_FAQ_A
			SET
				TITLE = #title# ,
				RPLY_CNTN = #rplyCntn# ,
				DB_UPD_TM = now()
			WHERE
				NUM = #num#
	</update>
	
	<!-- 유튜브 목록 -->
	<select id="hpgmngDao.getYoutubeList" parameterClass="youtubeVO" resultClass="egovMap">

 		SELECT
			A.*
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY gna.NUM) AS RNUM ,
				ROW_NUMBER() OVER(ORDER BY gna.NUM DESC) AS RNUM2 ,
				gna.NUM ,
				gna.TITLE ,
				gna.CNTN ,
				gna.WRITER ,
				DATE_FORMAT(gna.DB_INS_TM , '%Y-%m-%d') AS DB_INS_TM ,
				gnaf.FILE_NM ,
				gnaf.SYS_FILE_NM ,
				gnaf.FILE_PATH
			FROM
				GS_YOUTUBE AS gna
			LEFT JOIN GS_YOUTUBE_FILE AS gnaf
				ON gna.NUM = gnaf.FILE_NUM and gnaf.DEL_GB = 'N'
			WHERE 
				1=1
			<isNotEmpty property="schStartDate" prepend="AND">
		       	<![CDATA[ gna.DB_INS_TM >= #schStartDate# ]]>
		    </isNotEmpty>
		    
		    <isNotEmpty property="schEndDate" prepend="AND">
		        <![CDATA[ gna.DB_INS_TM <= #schEndDate#   ]]>
		    </isNotEmpty>
		    
		     <isNotEmpty property="schText" > 
		    	<isEqual prepend="AND" property="schType" compareValue="1">
					gna.TITLE LIKE CONCAT('%', #schText#, '%')
					OR
					gna.CNTN LIKE CONCAT('%', #schText#, '%')
					OR
					gna.WRITER LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schType" compareValue="2">
					gna.TITLE LIKE CONCAT('%', #schText#, '%')
				</isEqual>
				<isEqual prepend="AND" property="schType" compareValue="3">
					gna.CNTN LIKE CONCAT('%', #schText#, '%')
				</isEqual>
			</isNotEmpty>
			
			GROUP BY
				gna.NUM
				
			) A
		<![CDATA[
 		   	WHERE RNUM2 > #firstIndex# AND RNUM2 <= #lastIndex#
 			ORDER BY NUM DESC
 		]]>
	</select>
	
	<!-- 유튜브 갯수-->
	<select id="hpgmngDao.getYoutubeListTotCnt" parameterClass="youtubeVO" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM 
			GS_YOUTUBE AS gna
		WHERE 
		1=1
		<isNotEmpty property="schStartDate" prepend="AND">
	       	<![CDATA[ gna.DB_INS_TM >= #schStartDate# ]]>
	    </isNotEmpty>
	    
	    <isNotEmpty property="schEndDate" prepend="AND">
	        <![CDATA[ gna.DB_INS_TM <= #schEndDate#   ]]>
	    </isNotEmpty>
	    
	     <isNotEmpty property="schText" > 
	    	<isEqual prepend="AND" property="schType" compareValue="1">
				gna.TITLE LIKE CONCAT('%', #schText#, '%')
				OR
				gna.CNTN LIKE CONCAT('%', #schText#, '%')
				OR
				gna.WRITER LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schType" compareValue="2">
				gna.TITLE LIKE CONCAT('%', #schText#, '%')
			</isEqual>
			<isEqual prepend="AND" property="schType" compareValue="3">
				gna.CNTN LIKE CONCAT('%', #schText#, '%')
			</isEqual>
		</isNotEmpty>
	</select>
	
	<!-- 유튜브 등록-->
	<insert id="hpgmngDao.insertYoutube" parameterClass="Map">
		INSERT INTO GS_YOUTUBE(
			<!-- NUM , -->
			WRITER,
			TITLE,
			CNTN,
			REG_ID,
			DB_INS_TM
		) VALUES(
			<!-- (SELECT IFNULL(MAX(A.NUM), 0)+1 FROM GS_FREE_BOARD AS A) , -->
			#writer#,
			#title#,
			#cntn#,
			#regId#,
			NOW()
		)	
		
		<selectKey resultClass="int" keyProperty="num">
			SELECT LAST_INSERT_ID();
		</selectKey>
		
	</insert>
	
	<!-- 유튜브 파일업로드 등록  -->
	<insert id="hpgmngDao.insertYoutubeUpload" parameterClass="egovMap">
		INSERT INTO GS_YOUTUBE_FILE
			(
				FILE_NUM ,
				REG_ID ,
				REG_NM ,
				FILE_NM ,
				SYS_FILE_NM ,
				FILE_PATH ,
				FILE_SIZE,
				DB_INS_TM
			) VALUES (
				#fileNum# ,
				#regId# ,
				#writer# ,
				#fileNm# ,
				#sysFileNm# ,
				#filePath# ,
				#fileSize# ,
				now()
			)
	</insert>
	
	<!-- 유튜브 수정  -->
	<update id="hpgmngDao.updateYoutube" parameterClass="Map">
		UPDATE GS_YOUTUBE
			SET
				TITLE = #title# ,
				CNTN = #cntn# ,
				DB_UPD_TM = now()
			WHERE
				NUM = #num#
	</update>
	
	<!-- 유튜브 삭제  -->
	<update id="hpgmngDao.deleteYoutube" parameterClass="Integer">
		DELETE FROM
			GS_YOUTUBE
		WHERE 
			NUM = #youtubeNum#
	</update>
	
	<!-- 유튜브 파일업로드 삭제  -->
	<update id="hpgmngDao.deleteYoutubeUpload" parameterClass="Integer">
		DELETE FROM
			GS_YOUTUBE_FILE
		WHERE 
			FILE_NUM = #youtubeNum#
	</update>
	
	<!-- 유튜브 파일 삭제구분 처리  -->
	<update id="hpgmngDao.deleteYoutubeUploadGbY" parameterClass="Map">
		UPDATE  
			GS_YOUTUBE_FILE
		SET
	 		DEL_GB = 'Y'
		WHERE 
			FILE_NUM = #fileNum#
	</update>
	
	<!-- 유튜브 파일 삭제구분 취소  -->
	<update id="hpgmngDao.deleteYoutubeUploadGbN" parameterClass="egovMap">
		UPDATE  
			GS_YOUTUBE_FILE
		SET
	 		DEL_GB = 'N'
		WHERE 
			NUM = #num#
	</update>
	
	<!-- 유튜브 파일업로드 수정  -->
	<update id="hpgmngDao.updateYoutubeUpload" parameterClass="youtubeVO">
		UPDATE GS_YOUTUBE_FILE
			SET
				FILE_NM = #fileNm# ,
				SYS_FILE_NM = #sysFileNm# ,
				FILE_PATH = #filePath# ,
				FILE_SIZE = #fileSize# ,
				DB_UPD_TM = now()
			WHERE
				FILE_NUM = #num#
	</update>
	
	<!-- 유튜브 상세-->	
	<select id="hpgmngDao.getYoutubeDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			TITLE ,
			WRITER ,
			REG_ID ,
			CAST(CNTN AS CHAR CHARACTER SET UTF8) AS CNTN 
		FROM
			GS_YOUTUBE 
		WHERE
			NUM = #num#
	</select>
		
	<!-- 유튜브 상세 파일목록-->	
	<select id="hpgmngDao.getYoutubeFileDtl" parameterClass="Integer" resultClass="egovMap">		
		SELECT
			NUM ,
			FILE_NUM ,
			FILE_NM ,
			FILE_PATH ,
			SYS_FILE_NM
		FROM
			GS_YOUTUBE_FILE 
		WHERE
			FILE_NUM = #num#
			AND DEL_GB = 'N'
	</select>
	
</sqlMap>